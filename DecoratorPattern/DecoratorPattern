Decorator Example:

to compile:  javac *.java
to run:      java TesterWordList


Reference Article: http://www.codeproject.com/Tips/468951/Decorator-Design-Pattern-in-Java


 * Description:
 *=======================================================================+
 * WordListInterface <interface>: This is a word list container interface
 * +toString()
 * +getWordList()
 *=======================================================================+
 * WordListDecorator <abstract class implements WordListInterface>:
 * +WordList specialWordListToBeDecorated
 * +toString()
 *=======================================================================+
 * SimpleWordList <concrete class>: This is a concrete implementation of the word list container
 * +List<String> words
 * +toString()
 * +getWordList()
 *=======================================================================+
 * RemoveGreaterWordListDecorator: extends WordListDecorator:
 * +removeGreaterWords()
 *=======================================================================+
 * ReverseListWordListDecorator: extends WordListDecorator:
 * +reverseList()
 *=======================================================================+
 * UpperCaseDecorator: extends WordListDecorator:
 * +toUpperCase()
 *=======================================================================+